-- HAYLEY JOLLIFFE
-- Project 2

-- STEP 1
-- Expected return: 8 rows
SELECT CategoryName, COUNT(Products.CategoryID)
FROM Products
INNER JOIN Categories ON Products.CategoryID = Categories.CategoryID
GROUP BY Products.CategoryID
ORDER BY COUNT(CategoryID) DESC;

-- STEP 2
-- Expected return: 70 rows
SELECT DISTINCT c.Country, b.TotalCountry, c.City, a.TotalCity
FROM Customers AS c
LEFT JOIN (
    SELECT cc.Country, COUNT(cc.CustomerID) AS TotalCountry
    FROM Customers cc
    GROUP BY cc.Country) b
    ON c.Country = b.Country
LEFT JOIN (
    SELECT ccc.Country, ccc.City, COUNT(ccc.CustomerID) AS TotalCity
    FROM Customers ccc
    GROUP BY ccc.Country, ccc.City
    ORDER BY COUNT(ccc.CustomerID)) a
    ON c.City = a.City
    AND c.Country = a.Country
ORDER BY c.Country, c.City;

-- STEP 3
-- Expected return: 18 rows
SELECT *
FROM Products
WHERE (UnitsInStock > ReorderLevel)
ORDER BY ProductID ASC;

-- STEP 4
-- Expected return: 2 rows
SELECT ProductName, ProductID
FROM Products
WHERE (UnitsInStock + UnitsOnOrder) <= ReorderLevel
AND Discontinued = '0';

-- STEP 5
-- Expected return: 93 rows
SELECT *
FROM Customers
WHERE Region IS NOT NULL
GROUP BY Region
ORDER BY CustomerID ASC;

-- STEP 6
-- Expected return: 4 rows
SELECT c.CompanyName, o.CustomerID
FROM Orders AS o
INNER JOIN Customers AS c
ON c.CustomerID = o.CustomerID
WHERE o.CustomerID NOT IN (
    SELECT oo.CustomerID
    FROM Orders AS oo)
ORDER BY CustomerID ASC;

-- STEP 7
-- Expected return: 18 rows
SELECT *
FROM Customers
WHERE CustomerID
NOT IN (
    SELECT CustomerID
    FROM Orders
    WHERE EmployeeID = 4);

-- STEP 8
DROP VIEW IF EXISTS CustomerInfo;
-- (ViewStep8)

CREATE VIEW CustomerInfo AS
SELECT Customers.CustomerID, Customers.CompanyName, Customers.ContactName, 
Customers.ContactTitle, Customers.City, Customers.Country, Customers.Phone,
Orders.OrderDate, Orders.RequiredDate, Orders.ShippedDate
FROM Customers
INNER JOIN Orders ON Orders.CustomerID = Customers.CustomerID;

SELECT * FROM CustomerInfo;

-- STEP 9
-- Expected return: 26 rows
SELECT Products.ProductName, Products.UnitPrice, Suppliers.Region
FROM Products
INNER JOIN Suppliers
ON Products.SupplierID = Suppliers.SupplierID
WHERE Suppliers.Country NOT LIKE 'USA';

-- STEP 10
-- Expected return: 63 rows
DROP VIEW IF EXISTS Report200;
-- (ViewStep10)

CREATE VIEW Report200 AS
SELECT CustomerID, SUM(Orders.Freight)
FROM Orders
GROUP BY CustomerID
HAVING SUM(Orders.Freight) > 200;

SELECT * FROM Report200;
