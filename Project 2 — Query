-- HAYLEY JOLLIFFE
-- Project 2

-- STEP 1
-- Expected return: 8 rows
SELECT NumberOfProducts AS COUNT(CategoryID)
FROM Products
GROUP BY CategoryID DESC;

-- STEP 2
-- Expected return: 70 rows
SELECT PerCity AS COUNT(City)
FROM Customers
GROUP BY City ASC;

-- STEP 3
-- Expected return: 18 rows
SELECT *
FROM Products
WHERE (UnitsInStock > ReorderLevel)
ORDER BY ProductID ASC;
-- TESTED, DO NOT CHANGE

-- STEP 4
-- Expected return: 2 rows
SELECT *
FROM Products
WHERE (SUM(UnitsInStock + UnitsOnOrder) <= ReorderLevel AND Discontinued=0)
ORDER BY ProductID ASC;

-- STEP 5
-- Expected return: 93 rows
SELECT *
FROM Customers
WHERE Region IS NOT NULL
GROUP BY Region ASC
ORDER BY CustomerID ASC;

-- STEP 6
-- Expected return: 4 rows
SELECT CompanyName, CustomerID
FROM Orders.C1
WHERE CustomerID NOT IN (SELECT CustomerID
    FROM Orders.C2)
ORDER BY CustomerID ASC;

-- STEP 7
-- Expected return: 18 rows
SELECT CustomerName
FROM Orders.C1
WHERE EmployeeName NOT IN (SELECT EmployeeName
    FROM Orders.C2 WHERE EmployeeID = 4)
ORDER BY CustomerName ASC;

-- STEP 8
DROP VIEW IF EXISTS CustomerInfo;
-- (ViewStep8)

CREATE VIEW CustomerInfo AS
SELECT Customers.CustomerID, Customers.CompanyName, Customers.ContactName, 
Customers.ContactTitle, Customers.City, Customers.Country, Customers.Phone,
Orders.OrderDate, Orders.RequiredDate, Orders.ShippedDate
FROM Customers
INNER JOIN Orders ON Orders.CustomerID = Customers.CustomerID;

SELECT * FROM CustomerInfo;
-- TESTED, DO NOT CHANGE


-- STEP 9
-- Expected return: 26 rows
SELECT Products.ProductName, Products.UnitPrice, Suppliers.Region
FROM Products
INNER JOIN Suppliers
ON Products.SupplierID = Suppliers.SupplierID
WHERE Suppliers.Country NOT LIKE 'USA';
-- TESTED, DO NOT CHANGE

-- STEP 10
-- Expected return: 63 rows
DROP VIEW IF EXISTS Report200;
-- (ViewStep10)

CREATE VIEW Report200 AS
SELECT CustomerID, SUM(Orders.Freight)
FROM Orders
GROUP BY CustomerID
HAVING SUM(Orders.Freight) > 200;

SELECT * FROM Report200;
-- TESTED, DO NOT CHANGE
