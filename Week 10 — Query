-- HAYLEY JOLLIFFE
-- Week 10

-- Step 01
DELIMITER $$
CREATE PROCEDURE getStep1()
BEGIN
SELECT OrderID, ProductID, UnitPrice, Quantity
FROM orderdetails
WHERE CustomerID = "VNET";
END $$
DELIMITER ;

CALL getStep1();
-- Expected return: 10 Records

-- Step 02
DELIMITER $$
CREATE PROCEDURE getStep2()
BEGIN
SELECT CustomerID, SUM(Quantity) AS TotalQuantity), SUM(UnitPrice) AS TotalUnitPrice
FROM customer;

-- Step 03
DELIMITER $$
CREATE PROCEDURE getStep3()
BEGIN
SELECT * FROM employees;
END $$
DELIMITER ;

DROP PROCEDURE IF EXISTS getStep3();
-- Expected return: Drops 'getStep3()'

-- Step 04
DROP PROCEDURE IF EXISTS getStep4()

DELIMITER $$
CREATE PROCEDURE getStep4(IN WorkerID INT)
BEGIN
SELECT * FROM Orders
WHERE EmployeeID = WorkerID;
END $$

DELIMITER ;

CALL getStep4('1');
-- Expected return: Returns orders by EmployeeID

-- Step 05
DROP PROCEDURE IF EXISTS getStep5;

DELIMITER $$
CREATE PROCEDURE getStep5(IN GivenEmployee VARCHAR(50), OUT TotalOrders INT)
BEGIN
SELECT TotalOrders
FROM orders
GROUP BY(GivenEmployee);
END $$

DELIMITER ;

CALL getStep5;

-- Step 06

-- Step 07

-- Step 08

-- Step 09

-- Step 10
DROP PROCEDURE IF EXISTS getStep10;

DELIMITER $$
CREATE PROCEDURE IF getStep10(IN region10 VARCHAR(15), OUT customer_ID VARCHAR(5))
BEGIN
SELECT CustomerID
FROM customers
WHERE Region = region10;
END $$
DELIMITER ;

CALL getStep10('SP', @customer_ID);
SELECT @customer_ID;
